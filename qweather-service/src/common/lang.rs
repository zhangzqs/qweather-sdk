use serde::Serialize;
#[derive(Debug, Serialize, Clone)]
pub enum Lang {
    ZhHans,
    ZhHant,
    English,
    German,
    Spanish,
    French,
    Italian,
    Japanese,
    Korean,
    Russian,
    Hindi,
    Thai,
    AR,
    PT,
    BN,
    MS,
    NL,
    EL,
    LA,
    SV,
    ID,
    PL,
    TR,
    CS,
    ET,
    VI,
    Fil,
    FI,
    HE,
    IS,
    NB,
}

impl From<Lang> for String {
    fn from(val: Lang) -> Self {
        use Lang::*;
        match val {
            ZhHans => "zh-hans",
            ZhHant => "zh-hant",
            English => "en",
            German => "de",
            Spanish => "es",
            French => "fr",
            Italian => "it",
            Japanese => "ja",
            Korean => "ko",
            Russian => "ru",
            Hindi => "hi",
            Thai => "th",
            AR => "ar",
            PT => "pt",
            BN => "bn",
            MS => "ms",
            NL => "nl",
            EL => "el",
            LA => "la",
            SV => "sv",
            ID => "id",
            PL => "pl",
            TR => "tr",
            CS => "cs",
            ET => "et",
            VI => "vi",
            Fil => "fil",
            FI => "fi",
            HE => "he",
            IS => "is",
            NB => "nb",
        }
        .to_string()
    }
}
